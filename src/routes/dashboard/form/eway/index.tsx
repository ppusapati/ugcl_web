import { component$, useStore, $, useVisibleTask$ } from '@builder.io/qwik';
import { P9ETable } from '~/components/table';


// const API_URL = 'http://localhost:8080/api/v1';
const API_URL = 'https://ugcl-429789556411.asia-south1.run.app/api/v1';

export default component$(() => {
 
  // User table state
  const Eway = useStore<{
    data: any[];
    loading: boolean;
    error: string;
    page: number;
    limit: number;
    total: number;
  }>({
    data: [],
    loading: true,
    error: '',
    page: 1,
    limit: 10,
    total: 0,
  });

  // Fetch Eway with bearer token
  const fetchEway = $(async (EwayStore: typeof Eway, page = EwayStore.page) => {
    Eway.loading = true;
    Eway.error = '';
    try {
      const token = localStorage.getItem('token');
      const res = await fetch(`${API_URL}/admin/eway?page=${page+1}&limit=${Eway.limit}`, {
        headers: { 'Authorization': `Bearer ${token}` },
      });
      if (!res.ok) throw new Error('Failed to fetch: ' + res.statusText);
      const result = await res.json();
      Eway.data = result.data;
      Eway.page = result.page -1;
      Eway.total = result.total;
      // totalCountSignal.value = result.total;
    } catch (e: any) {
      Eway.error = e.message || 'Could not load Eway';
    } finally {
      Eway.loading = false;
    }
  });

  useVisibleTask$(async () => {
    fetchEway(Eway);
  });


  return (
    <div class="mx-auto container px-4">
      <div class="flex flex-col md:flex-row gap-8 items-start">
        <div class="flex-[2] min-w-0 dark:bg-dark-800 card-shadow bg-white">
          
          <P9ETable
            header={[
  { key: 'billNo', label: 'Bill No' },
  { key: 'generatedDate', label: 'Generated Date' },
  { key: 'generatedBy', label: 'Generated By' },
  { key: 'validUpto', label: 'Valid Upto' },
  { key: 'mode', label: 'Mode' },
  { key: 'type', label: 'Type' },
  { key: 'documentDetails', label: 'Document Details' },
  { key: 'dispatchFrom', label: 'Dispatch From' },
  { key: 'dispatchPincode', label: 'Dispatch Pincode' },
  { key: 'shipToAddress', label: 'Ship To Address' },
  { key: 'shipToPincode', label: 'Ship To Pincode' },
  { key: 'productName', label: 'Product Name' },
  { key: 'specialItemDescription', label: 'Special Item' },
  { key: 'pipeDia', label: 'Pipe Dia' },
  { key: 'uom', label: 'UOM' },
  { key: 'quantity', label: 'Quantity' },
  { key: 'hsnCode', label: 'HSN Code' },
  { key: 'taxableAmount', label: 'Taxable Amount' },
  { key: 'transporterIdName', label: 'Transporter Name' },
  { key: 'transporterDocNo', label: 'Transporter Doc No' },
  { key: 'documentDate', label: 'Document Date' },
  { key: 'vehicleNo', label: 'Vehicle No' },
  { key: 'enteredBy', label: 'Entered By' },
  { key: 'enteredDate', label: 'Entered Date' },
  { key: 'latitude', label: 'Latitude' },
  { key: 'longitude', label: 'Longitude' },
  { key: 'submittedAt', label: 'Submitted At' }
]}
            data={Eway.data}
            defaultLimit={10}
            title="Eway List"
            enableSearch
            enableSort
            serverPagination
            totalCount={Eway.total}
            onPageChange$={async (page) => {
              await fetchEway(Eway, page); // fetch and update Eway store
              return [...Eway.data];
            }}
          />
          
        </div>
      </div>
    </div>
  );
});
